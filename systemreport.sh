#!/bin/bash

# Blank line for clean formatting
echo ""

# Header with hostname, username, and timestamp
echo "System Report for $(hostname) generated by $(whoami), on $(date)"
echo ""

echo "System Information"
echo "------------------"

# Get OS name and version from /etc/os-release
source /etc/os-release
echo "OS: $NAME $VERSION"

# System uptime (e.g., "up 2 hours, 5 minutes")
echo "Uptime: $(uptime -p)"

# CPU info using lshw and cleaning up output
CPU=$(lshw -short 2>/dev/null | grep processor | awk '{$1=$2=""; print $0}' | sed 's/^[ \t]*//')
echo "CPU: $CPU"

# Total installed RAM
RAM=$(free -h | grep Mem | awk '{print $2}')
echo "RAM: $RAM"

# List disk model and size
echo -n "Disk(s): "
lshw -short 2>/dev/null | grep disk | awk '{$1=$2=""; print $0}' | sed 's/^[ \t]*//' | paste -sd "; " -

# Video card info
VIDEO=$(lshw -C display 2>/dev/null | grep product | awk -F: '{print $2}' | sed 's/^[ \t]*//')
echo "Video: $VIDEO"

# Get default interface name used for internet connection
DEF_IF=$(ip route | grep default | awk '{print $5}')

# Get IP address of that interface
IPADDR=$(ip -4 addr show $DEF_IF | grep inet | awk '{print $2}' | cut -d/ -f1)
echo "Host Address: $IPADDR"

# Get default gateway IP
GATEWAY=$(ip route | grep default | awk '{print $3}')
echo "Gateway IP: $GATEWAY"

# DNS servers from resolv.conf
DNS=$(grep nameserver /etc/resolv.conf | awk '{print $2}' | paste -sd ", ")
echo "DNS Server: $DNS"

echo ""
echo "System Status"
echo "-------------"

# List currently logged-in users
LOGGEDIN=$(who | awk '{print $1}' | sort | uniq | paste -sd "," -)
echo "Users Logged In: $LOGGEDIN"

# Disk space per mountpoint
echo "Disk Space:"
df -h | grep '^/' | awk '{print $6 " " $4}'

# Total process count
PROCESSES=$(ps aux | wc -l)
echo "Process Count: $PROCESSES"

# Load averages (1, 5, 15 min)
LOAD=$(uptime | awk -F 'load average: ' '{print $2}')
echo "Load Averages: $LOAD"

# List listening ports
PORTS=$(ss -tuln | grep LISTEN | awk '{print $5}' | cut -d: -f2 | sort -n | uniq | paste -sd ", " -)
echo "Listening Network Ports: $PORTS"

# UFW firewall status
if command -v ufw >/dev/null 2>&1; then
    echo "UFW Status: $(sudo ufw status | head -n1)"
else
    echo "UFW Status: ufw not installed"
fi

# Ends
echo ""

